apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-kube-app
  labels:
    app: spring-kube-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-kube-app
  template:
    metadata:
      labels:
        app: spring-kube-app
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'webapp'
        vault.hashicorp.com/agent-pre-populate-only: 'true'
        vault.hashicorp.com/agent-inject-secret-database-config: 'kv/dev/apps/spring'
        # Environment variable export template
        vault.hashicorp.com/agent-inject-template-database-config: |
          {{- with secret "kv/dev/apps/spring" -}}
            export MYSQL_HOST="{{ .Data.data.MYSQL_HOST }}"
            export MYSQL_USER="{{ .Data.data.MYSQL_USER }}"
            export MYSQL_PORT="{{ .Data.data.MYSQL_PORT }}"
            export MYSQL_DATABASE="{{ .Data.data.MYSQL_DATABASE }}"
            export MYSQL_PASSWORD="{{ .Data.data.MYSQL_PASSWORD }}"
          {{- end }}
    spec:
      serviceAccountName: vault-auth
      containers:
        - name: spring-kube-app
          image: khalil73/spring-kube  # Replace with your Docker image name
          command:
            ['sh', '-c']
          args:
            ['source /vault/secrets/database-config && java -jar /app.jar']
          ports:
            - containerPort: 8089  # Port your Spring Boot app listens on inside the container

